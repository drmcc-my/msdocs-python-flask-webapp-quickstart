# Python to Linux Web App on Azure
# Build your Python project and deploy it to Azure as a Linux Web App.
# Change python version to one thats appropriate for your application.
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

name: $(Build.DefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(rev:.r)

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureServiceConnectionId: 'c1102cee-7105-4af3-a38d-eca8943e1bea'
  # Web app name
  webAppName: 'dm-py-app'
  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  # Environment name
  #environmentName: ''
  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)
  # Python version: 3.7
  pythonVersion: '3.7'
  artifactname: $(Build.BuildId)

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'

    - script: |
        python -m venv antenv
        source antenv/bin/activate
        python -m pip install --upgrade pip
        pip install setup
        pip install -r requirements.txt
      workingDirectory: $(projectRoot)
      displayName: "Install requirements"

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(projectRoot)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(projectRoot)/$(Build.BuildId).zip
        replaceExistingArchive: true
        verbose: true

    #- upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
    #  displayName: 'Upload package'
    #  artifact: drop
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: $(projectRoot)/$(Build.BuildId).zip
        artifactName: $(artifactname)

- stage: Deploy
  displayName: 'Deploy Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: DeploymentJob
    pool:
      vmImage: $(vmImageName)
    #environment: $(environmentName)
  
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python version'

    - task: DownloadBuildArtifacts@0
      inputs:
        artifactName: $(artifactname)
        downloadPath: $(projectRoot)

    - task: AzureWebApp@1
      displayName: 'Deploy Azure Web App : '
      inputs:
        azureSubscription: $(azureServiceConnectionId)
        appName: $(webAppName)
        appType: webAppLinux
        package: $(projectRoot)/**/*.zip